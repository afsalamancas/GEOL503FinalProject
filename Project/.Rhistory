for (j in 1:10){
serie1[,j]<-rep(0, times=(length(ModelEarthRelativePermeabilities[,1])))
}
serie1<-NA
serie1<-as.data.frame(serie1)
for (j in 1:10){
serie1[,j]<-rep(0, times=(length(ModelEarthRelativePermeabilities[,1])))
}
serie1<-NA
serie1<-as.data.frame(serie1)
serie1<-rep(0, times=(length(ModelEarthRelativePermeabilities[,1])))
for (j in 1:10){
serie1[,j]<-serie1
}
serie1<-NA
serie1<-as.data.frame(serie1)
serie1<-rep(0, times=(length(ModelEarthRelativePermeabilities[,1])))
for (j in 1:10){
serie1<-c(serie1)
}
for (j in 1:10){
serie1$newcolumn<-serie1
}
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-NA
movingrow<-rep(0, times=length(ModelEarthRelativePermeabilities[,j]))
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
movingrow2<-movingrow[-1]
movingrow2<-append(movingrow2,0)
serie1[i+(length(ModelEarthRelativePermeabilities[,1])),j]<-sum(impulse*movingrow2)
}
}
serie1<-NA
serie1<-as.data.frame(serie1)
movingrow<-NA
movingrow<-rep(0, times=length(ModelEarthRelativePermeabilities[,j]))
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
movingrow2<-movingrow[-1]
movingrow2<-append(movingrow2,0)
serie1[i+(length(ModelEarthRelativePermeabilities[,1])),j]<-sum(impulse*movingrow2)
}
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-NA
movingrow<-rep(0, times=length(ModelEarthRelativePermeabilities[,j]))
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
movingrow2<-movingrow[-1]
movingrow2<-append(movingrow2,0)
serie1[i+(length(ModelEarthRelativePermeabilities[,1])),j]<-sum(impulse*movingrow2)
}
}
View(serie1)
serie1<-NA
serie1<-as.data.frame(serie1)
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-NA
movingrow<-rep(0, times=length(ModelEarthRelativePermeabilities[,j]))
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
#movingrow2<-movingrow[-1]
#movingrow2<-append(movingrow2,0)
# serie1[i+(length(ModelEarthRelativePermeabilities[,1])),j]<-sum(impulse*movingrow2)
#}
}
View(serie1)
movingrow<-NA
movingrow<-rep(0, times=length(ModelEarthRelativePermeabilities[,1]))
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
#movingrow2<-movingrow[-1]
#movingrow2<-append(movingrow2,0)
# serie1[i+(length(ModelEarthRelativePermeabilities[,1])),j]<-sum(impulse*movingrow2)
#}
}
View(serie1)
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
movingrow<-NA
movingrow<-rep(0, times=length(ModelEarthRelativePermeabilities[,1]))
#movingrow2<-movingrow[-1]
#movingrow2<-append(movingrow2,0)
# serie1[i+(length(ModelEarthRelativePermeabilities[,1])),j]<-sum(impulse*movingrow2)
#}
}
View(serie1)
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA
movingrow<-rep(0, times=length(ModelEarthRelativePermeabilities[,1]))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
#movingrow2<-movingrow[-1]
#movingrow2<-append(movingrow2,0)
# serie1[i+(length(ModelEarthRelativePermeabilities[,1])),j]<-sum(impulse*movingrow2)
#}
}
View(serie1)
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=length(ModelEarthRelativePermeabilities[,1]))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-movingrow[-1]
movingrow<-append(movingrow,0)
serie1[i+(length(ModelEarthRelativePermeabilities[,1])),j]<-sum(impulse*movingrow2)
}
}
View(serie1)
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=length(ModelEarthRelativePermeabilities[,1]))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-movingrow[-1]
movingrow<-append(movingrow,0)
serie1[i+(length(ModelEarthRelativePermeabilities[,1])),j]<-sum(impulse*movingrow)
}
}
View(serie1)
#Iterate
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=length(ModelEarthRelativePermeabilities[,1]))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow2<-CRS[,j]
movingrow2<-movingrow2[-1]
movingrow2<-append(movingrow,0)
serie1[i+(length(ModelEarthRelativePermeabilities[,1])),j]<-sum(impulse*movingrow2)
}
}
View(serie1)
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=length(ModelEarthRelativePermeabilities[,1]))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow2<-CRS[,j]
movingrow2<-movingrow2[-1]
movingrow2<-append(movingrow,0.0)
serie1[i+(length(ModelEarthRelativePermeabilities[,1])),j]<-sum(impulse*movingrow2)
}
}
View(serie1)
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow2<-CRS[,j]
#movingrow2<-movingrow2[-1]
#movingrow2<-append(movingrow,0.0)
serie1[i+(length(ModelEarthRelativePermeabilities[,1])),j]<-sum(impulse*movingrow2)
}
View(serie1)
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow2<-CRS[,j]
#movingrow2<-movingrow2[-1]
#movingrow2<-append(movingrow,0.0)
serie1[(i+(length(ModelEarthRelativePermeabilities[,1]))),1]<-sum(impulse*movingrow2)
}
View(serie1)
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow2<-CRS[,1]
#movingrow2<-movingrow2[-1]
#movingrow2<-append(movingrow,0.0)
serie1[(i+(length(ModelEarthRelativePermeabilities[,1]))),1]<-sum(impulse*movingrow2)
}
View(serie1)
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=length(ModelEarthRelativePermeabilities[,1]))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
return(serie1)
}
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow2<-CRS[,1]
#movingrow2<-movingrow2[-1]
#movingrow2<-append(movingrow,0.0)
serie1[(i+(length(ModelEarthRelativePermeabilities[,1]))),1]<-sum(impulse*movingrow2)
}
}
View(serie1)
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
movingrow2<-CRS[,1]
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow2<-movingrow2[-1]
movingrow2<-append(movingrow,0)
serie1[,j]<-append(serie1,sum(impulse*movingrow2))
}
}
View(serie1)
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
movingrow2<-CRS[,1]
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow2<-movingrow2[-1]
movingrow2<-append(movingrow,0)
serie1[,j]<-append(serie1,sum(impulse*movingrow2))
}
}
View(serie1)
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
movingrow2<-CRS[,1]
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow2<-movingrow2[-1]
movingrow2<-append(movingrow,0)
serie1[,j]<-append(serie1[,j],sum(impulse*movingrow2))
}
}
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
movingrow2<-CRS[,1]
for (i in 1:((length(ModelEarthRelativePermeabilities[,1]))-1)){
movingrow2<-movingrow2[-1]
movingrow2<-append(movingrow,0)
serie1[,j]<-append(serie1[,j],sum(impulse*movingrow2))
}
}
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
movingrow2<-CRS[,1]
for (i in 1:((length(ModelEarthRelativePermeabilities[,1]))-1)){
movingrow2<-movingrow2[-1]
movingrow2<-append(movingrow,0)
serie1[,j]<-append(serie1[,j],sum(impulse*movingrow2))
}
}
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow2<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow2<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
movingrow2<-CRS[,j]
movingrow2<-movingrow2[-1]
movingrow2<-append(movingrow,0)
serie1[i+((length(ModelEarthRelativePermeabilities[,1]))),j]<-sum(impulse*movingrow2)
}
}
View(serie1)
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
movingrow<-CRS[,j]
movingrow<-movingrow[-1]
movingrow<-append(movingrow2,0)
serie1[i+((length(ModelEarthRelativePermeabilities[,1]))),j]<-sum(impulse*movingrow)
}
}
View(serie1)
View(impulse)
View(CRS)
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
movingrow<-CRS[,j]
movingrow<-movingrow[-1]
movingrow<-append(movingrow,0)
serie1[(i+(length(ModelEarthRelativePermeabilities[,1]))),j]<-sum(impulse*movingrow)
}
}
View(serie1)
serie1<-NA #Initialize the matrix of the radargram
serie1<-as.data.frame(serie1)
#Iterate
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
movingrow<-CRS[,j]
movingrow<-movingrow[-1]
movingrow<-append(movingrow,0)
serie1[(i+(length(ModelEarthRelativePermeabilities[,1]))),j]<-sum(impulse*movingrow)
}
}
View(serie1)
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
#movingrow<-CRS[,j]
#movingrow<-movingrow[-1]
#movingrow<-append(movingrow,0)
#serie1[(i+(length(ModelEarthRelativePermeabilities[,1]))),j]<-sum(impulse*movingrow)
}
}
View(serie1)
impulse<-as.numeric(rickerwavelet(dtt,ntt,ff))
impulse<-as.data.frame(impulse)
CRS<-NA
CRS<-rep(0, times=(length(ModelEarthRelativePermeabilities[,1])))
CRS<-as.data.frame(CRS)
for (i in 1:(length(ModelEarthRelativePermeabilities[1,]))){
for (n in 2:(length(ModelEarthRelativePermeabilities[,1]-1))){
CRS[n,i]<-((ModelEarthRelativePermeabilities[n+1, i])-(ModelEarthRelativePermeabilities[n, i]))/((ModelEarthRelativePermeabilities[n+1,i])+(ModelEarthRelativePermeabilities[n,i]))
}
CRS[1,i]<-0
}
serie1<-NA #Initialize the matrix of the radargram
serie1<-as.data.frame(serie1)
#Iterate
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
#movingrow<-CRS[,j]
#movingrow<-movingrow[-1]
#movingrow<-append(movingrow,0)
#serie1[(i+(length(ModelEarthRelativePermeabilities[,1]))),j]<-sum(impulse*movingrow)
}
}
View(serie1)
impulse<-as.numeric(rickerwavelet(dtt,ntt,ff))
setwd("C:/Users/afsal/OneDrive/Desktop/KU/NumericalMethods/Project")
#Introduce the frequency
ff<-2e8 #200 MHz
#Introduce the time sampling rate
dtt<-2e-11  #0.2 ns/sample
#Introduce the number of samples per scan
ntt<-1024
fnyq<-1.0/(2.0*dtt) #Nyquist Frequency
df<-1.0/(ntt*dtt) # Determine Fundamental Frequency
#Model of relative electrical permittivities (Model of the Earth)
ModelEarthRelativePermeabilities<-read.csv(file="ModelEarth.csv")
ModelEarthRelativePermeabilities<-as.data.frame(ModelEarthRelativePermeabilities)
rickerwavelet<-function(dt,nt,f){
t<-seq((-(nt/2.0)*dt),(((nt-1)/2.0)*dt),dt) #creates time array
b<-(pi*f)^2
bt2=b*(t^2)
w<- (1-2*bt2)*exp(-bt2)
}
impulse<-as.numeric(rickerwavelet(dtt,ntt,ff))
impulse<-as.data.frame(impulse)
CRS<-NA
CRS<-rep(0, times=(length(ModelEarthRelativePermeabilities[,1])))
CRS<-as.data.frame(CRS)
for (i in 1:(length(ModelEarthRelativePermeabilities[1,]))){
for (n in 2:(length(ModelEarthRelativePermeabilities[,1]-1))){
CRS[n,i]<-((ModelEarthRelativePermeabilities[n+1, i])-(ModelEarthRelativePermeabilities[n, i]))/((ModelEarthRelativePermeabilities[n+1,i])+(ModelEarthRelativePermeabilities[n,i]))
}
CRS[1,i]<-0
}
#Convolution
#Prepare a dataset to storage the values of the convolution process
serie1<-NA #Initialize the matrix of the radargram
serie1<-as.data.frame(serie1)
#Iterate
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
#movingrow<-CRS[,j]
#movingrow<-movingrow[-1]
#movingrow<-append(movingrow,0)
#serie1[(i+(length(ModelEarthRelativePermeabilities[,1]))),j]<-sum(impulse*movingrow)
}
}
View(serie1)
serie1<-NA #Initialize the matrix of the radargram
serie1<-as.data.frame(serie1)
#Iterate
for (j in 1:(length(ModelEarthRelativePermeabilities[1,]))){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
#movingrow<-CRS[,j]
#movingrow<-movingrow[-1]
#movingrow<-append(movingrow,0)
#serie1[(i+(length(ModelEarthRelativePermeabilities[,1]))),j]<-sum(impulse*movingrow)
}
}
View(serie1)
View(CRS)
View(serie1)
CRS[1,1]
CRS[500,1]
serie1<-NA #Initialize the matrix of the radargram
serie1<-as.data.frame(serie1)
#Iterate
for (j in 1:length(ModelEarthRelativePermeabilities[1,])){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
#movingrow<-CRS[,j]
#movingrow<-movingrow[-1]
#movingrow<-append(movingrow,0)
#serie1[(i+(length(ModelEarthRelativePermeabilities[,1]))),j]<-sum(impulse*movingrow)
}
}
View(serie1)
for (j in 1:length(ModelEarthRelativePermeabilities[1,])){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
View(serie1)
View(serie1)
View(serie1)
for (j in 1:length(ModelEarthRelativePermeabilities[1,])){
movingrow<-NA #Prepare a vector to calculate convolution by means of append a new value per iteration from the matrix of reflectivity indexes
movingrow<-rep(0, times=2*(length(ModelEarthRelativePermeabilities[,1])))
for (i in 1:((length(ModelEarthRelativePermeabilities[,1])))){
movingrow<-append(movingrow,CRS[i,j])
movingrow<-movingrow[-1]
serie1[i,j]<-sum(impulse*movingrow)
}
View(serie1)
View(serie1)
View(serie1)
View(serie1)
